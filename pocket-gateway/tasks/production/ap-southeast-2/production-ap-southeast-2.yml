# .github/workflows: DO NOT MODIFY HERE BUT RATHER REFER TO THEIR CORRESPONDING
# TEMPLATE IN THE POCKET-GATEWWAY FOLDER OTHERWISE YOUR CHANGES WILL BE OVERWRITTEN
{{! Template used to generate workflow file with shared-enviroments }}
{{=[[ ]]=}}
name: Terraform Production Deployment ap-southeast-2

on:
  push:
    branches: [master, eth-altruist]

jobs:
  deploy:
    name: Gateway
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Make envfile ap-southeast-2
        uses: SpicyPizza/create-envfile@v1
        with:
          [[#shared_envs]]
          envkey_[[key]]: [[&value]]
          [[/shared_envs]]
          envkey_REMOTE_REDIS_ENDPOINT: gateway-prod-redis.m1bwfz.clustercfg.apse2.cache.amazonaws.com
          envkey_REGION: 'ap-southeast-2'
          envkey_REGION_NAME: 'ap-southeast-2'
          file_name: .env

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gateway-prod
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID / ap-southeast-2 - gateway
        id: task-def-ap-southeast-2-gateway
        uses: aws-actions/amazon-ecs-render-task-definition@master
        with:
          task-definition: pocket-gateway/tasks/production/ecs-task-definition.json
          container-name: gateway
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy / ap-southeast-2
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-ap-southeast-2-gateway.outputs.task-definition }}
          service: gateway-prod
          cluster: gateway-prod
          wait-for-service-stability: true
